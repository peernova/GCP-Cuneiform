apiVersion: v1
kind: Service
metadata:
  labels: &ServiceLabels
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: cuneiform-hdfs-datanode-1
  name: $APP_INSTANCE_NAME-hdfs-datanode-1
spec:
  ports:
  - name: ipc
    port: 50020
    protocol: TCP
  - name: address
    port: 50010
    protocol: TCP
  - name: web
    port: 50075
    protocol: TCP
  selector: *ServiceLabels
  clusterIP: None

---

apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: $APP_INSTANCE_NAME-hdfs-datanode-1
  labels: &DeploymentLabels
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: cuneiform-hdfs-datanode-1

spec:
  serviceName: hdfs-datanode-1
  replicas: 1
  selector:
    matchLabels: *DeploymentLabels
  template:
    metadata:
      labels: *DeploymentLabels
    spec:
      hostname: $APP_INSTANCE_NAME-hdfs-datanode-1
      containers:
        - name: hdfs-datanode-1
          image: $IMAGE_HDFS_DATANODE
          imagePullPolicy: Always
          env:
          - name: NAME_PREFIX
            value: "$APP_INSTANCE_NAME"
          - name: NAME_SUFFIX
            value: ""
          volumeMounts:
          - name: $APP_INSTANCE_NAME-hdfs-datanode-1-data
            mountPath: /usr/local/hdfs/datanode
          resources:
            limits:
              cpu: "3.1"
              memory: 8Gi
            requests:
              cpu: "0.9"
              memory: 3200Mi
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 120
            timeoutSeconds: 30
            exec:
              command:
              - /usr/local/hadoop/bin/hdfs
              - dfs
              - -ls
              - /
  volumeClaimTemplates:
  - metadata:
      name: $APP_INSTANCE_NAME-hdfs-datanode-1-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi
